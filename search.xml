<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[正则基础知识]]></title>
    <url>%2F2018%2F10%2F13%2F%E6%AD%A3%E5%88%99%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[正则表达式前言 定义正则12let reg = new RegExp(&quot;G&quot;);//RegExp对象，参数就是我们要制定的规则let reg = /G/; //一般写法，推荐使用，性能更好 常用方法 test()：在字符串中查找符合正则的内容，找到返回true，反之返回false 1234//判断数字是否有非数字let str =&apos;1233456&apos;;let reg = /\D/;console.log(reg.test(str));//false exec() 12345678910111213/*RegExp的exec()方法和String的match()方法很类似，它对一个指定的字符串执行一个正则表达式匹配，如果没有找到任何一个匹配，它将返回null，否则返回一个数组，这个数组的第一个元素包含的是与正则表达式相匹配的字符串,余下的所有元素包含的是匹配的各个分组。而且，正则表达式对象的index属性还包含了匹配发生的字符串的位置，属性input引用的则是被检索的字符串。如果正则表达式具有g标志，它将把该对象的lastIndex属性设置到紧接着匹配字符串的位置开始检索，如果exec()没有发现任何匹配，它将把 lastIndex属性重置为0，这一特殊的行为可以使你可以反复调用exec()遍历一个字符串中所有的正则表达式匹配。*/let str5 = &apos;cat,fat,bat,sat,cct&apos;;let reg5 = /.at/g;reg5.lastIndex = 10;console.log(reg5.exec(str5));//[ &apos;cat&apos;, index: 0, input: &apos;cat,fat,bat,sat,cct&apos; ] replace():查找符合正则的字符串，替换成对应的字符串 1234567891011121314//替换关键字let str4 = &apos;七夕，JJ，我在月下等你&apos;;let reg4 = /七夕|JJ/g;/*str4 = str4.replace(reg4,&apos;*&apos;);console.log(str4);//*，*，我在月下等你.有点问题啊，那么就不要直接替换，我们用个回调函数解决*/str4 = str4.replace(reg4,function (str4) &#123; let res = &apos;&apos;; for(let i =0;i&lt;str4.length;i++)&#123; res +=&apos;*&apos;; &#125; return res;&#125;);console.log(str4);//**，**，我在月下等你 search():在字符串搜索符合正则的内容，搜索到就返回出现的位置注意：如果找到多个，则只会返回第一个找到的字符的位置，找不到就返回- 1234//在字符串中找到字母b，且不区分大小写let str2 = &apos;abcbdef&apos;;let reg2 = /B/gi;console.log(str2.search(reg2));//2 找到的第一个字符的位置 match():在字符串中搜索符合规则的内容，搜索成功就返回内容，反之则返回null 1234//找到指定格式的所有数字let str3 = &apos;haj123sdk54hask33dkhalsd879&apos;;let reg3 = /\d+/g;//每次至少匹配一个数字console.log(str3.match(reg3));//[ &apos;123&apos;, &apos;54&apos;, &apos;33&apos;, &apos;879&apos; ] 常见字符 转义字符这几个常见转义字符还是要的顺手记下滴12345678\s :空格\S :非空格\d :数字\D :非数字\w :字符（字母，数字，下划线那些）\W :非字符. :任意字符\. :真正的点 量词123456&#123;n,m&#125; :出现n~m次&#123;n,&#125; :至少n次&#123;n&#125; :出现n次* :任意次? :1次或者0次，相当于&#123;0,&#125;+ :1~n次 其他符号123456^ :匹配输入串的开始位置$ :匹配输入串的结束位置[] :[]里面的任意字符[^] :非[]里面的任意字符() :分组符，小括号中的项叫做正则的子项$1($n) :正则式中的第1（n）个子项]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[搭建自己的github博客]]></title>
    <url>%2F2018%2F10%2F10%2F%E9%85%8D%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84%20Hexo%20%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[1 项目结构1.1 _config.yml网站的配置信息，在这边配置网站的大部分信息 1.2 scaffolds模板文件夹，新建文件会根据里面的模板创建新的文件 1.3 source资源文件夹是存放用户资源的地方，然后 _posts 是存放 markdown 文章的地方 1.4 themes主题文件夹，hexo 会根据主题生成静态文件夹。本次我们使用的主题是 Next 主题主题网站 2 _config.yml 的配置2.1 网站我们可以在 _config.yml 文件 中修改大部分的配置，具体咋配置，我就偷个懒了。直接贴中文文档的图了。其中，language 就设置为 zh-Hans 啦，毕竟咱还是用中文写博客的，当然如果有大佬想搞个国际化的全英博客的话就另当别论了。 description 主要用于SEO，告诉搜索引擎一个关于我们站点的简单描述，官方是推荐在里面写我们站点的关键字，主题啥的，但是个人咧还是比较喜欢直接写个个人签名╭(╯^╰)╮ author 参数就是来说这个博客的是谁家的孩子啦。 2.2 网址如果你的网站存放在子目录中，例如 http://yoursite.com/blog，则请将你的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。 2.3 目录这里是高端局，我这种菜鸡就老老实实跟着官方走，不乱改了。 2.4 文章默认情况下，Hexo 生成的超链接都是绝对地址。例如，如果您的网站域名为 example.com，您有一篇文章名为 hello，那么绝对链接可能像这样：http://example.com/hello.html，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。 2.5 其他 3 其他配置3.1 标签、分类、关于设置仔细看了一下上面关于目录的配置，然后又看了其他人的 hexo 博客，心头是不是一阵疑惑，咦，咋感觉自己少了那么多目录结构咧。咋整啊？自己装呗。123hexo new page &quot;tags&quot;hexo new page &quot;categories&quot;hexo new page &quot;about&quot; 执行完这三条命令后，在站点的source 的目录下就生成了 tags，about，categories 三个文件夹然后就分别到 source 文件夹中新生成的 about 文件夹里面的 index.md 中添加下面的代码type: “tags”重新运行之后是不是就出来了，什么？出不来？好吧，我错了，这样的话就要去看你选择的 theme 里面的配置了，把 menu 里面对这三个菜单项的注释去掉，就可以了。再不行的话，那就那就，百度吧。 3.2 关联到 github pages 修改 _config.yml, 在文件最底部添加如下代码 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: ssh://git@github.com/你的github名/你的github名.github.io.git branch: master 安装一个 hexo 插件 1npm install hexo-deployer-git --save 部署项目，就直接运行下面三条命令就行了 123hexo clean // 清除原来打包的项目hexo g // 生成新的项目hexo d // 上传项目到github 最后的最后，让我们打开浏览器，输入 https://你的github用户名.github.io，例如我的 https://lijiayuan365.github.io\ 4 真正的最后强烈推荐下面这位大佬的博客 Hexo 博客主题的设置与完善，可以说是相当的全面与仔细了，快速配置好你的博客。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建自己的github博客]]></title>
    <url>%2F2018%2F06%2F25%2F%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[1 什么是 HexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 2 开始搭建博客2.1 前提电脑安装好 Node 和 Git 2.2 安装直接用 npm 全局安装（嫌慢的话就用 cnpm 吧）1npm install -g hexo-cli 2.3 搭建博客网站完成 Hexo 的安装之后，就可以执行下面的命令，在指定文件夹内生成系列的网站文件123hexo init folderNamecd folderNamenpm install // 安装依赖 注意好像新版本的 hexo-cli 在初始化项目的时候会自动安装依赖，如下图\鉴于网络因素，直接用npm 安装依赖实在是太慢了，想快一点的同学看到他在装依赖的时候，不要怂，直接就是 Ctrl+C 断了它进程，然后自己进入文件夹用 cnpm install 装依赖。 3 查看效果运行下面代码，开启博客1hexo server 最后打开4000端口就可以看到自己的博客网站啦 4 项目结构新建个项目之后，指定的文件夹的目录如下：12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 4.1 _config.yml网站的 配置 信息，小伙伴们可以在这边配置大部分的参数。 4.2 package.json这个就不说了，就是这个项目的信息了。 4.3 scaffold 文件夹模板 文件夹。当我们新建文章的时候，Hexo 会根据 scaffold 来建议文件\Hexo 的模板是指在新建的 markdown 文件中默认填充的内容。例如，如果我们修改 scaffold/post.md 中的 Front-matter 内容，那么没一次新建一篇文章都会包含这个修改 4.4 source 文件夹资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _(下划线)的文件/文件夹和隐藏的文件将会被忽略（意思就是在这里不要以下划线开头去命名新建的文件/文件夹）。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。 4.5 themes 文件夹主题 文件夹。Hexo会根据主题来生成静态页面。这里的话，推荐一个主题吧。 next 我也不知道为啥要推荐它，反正就瞅他顺眼+多人用+文档全吧。不过想用其他也随便吧，反正写博客嘛，咱们还是多关注内容，外观的话，顺眼舒服就行了。 5 开始写博客这个就很简单了，三步走直接搞定啦。 直接找个能写 markdown 的工具就开始写我们的博客了。这里的话我推荐用一下 『有道云笔记』吧（『有道云笔记』的工作人员看到了麻烦给点广告费啊~(@^_^@)~），平常就可以在上面做做笔记，写写博客，写完直接导出来一个 markdown 文件。当然其他编辑器一般也是可以方便的写 markdown 的。\『注意：这里有道云笔记有个坑点，不是会员不给 markdown 引入本地的图片，如果想用图片的话只能引入网上外链，这时候就要使用图床了，这边推荐用一下『七牛云』吧，有免费 10 G 的空间可以用。（『七牛云』的小姐姐看到麻烦给我叫个鸡腿），里面还有一些使用技巧，这里就不说了，大家自己再去百度玩一下吧。』 将写完的 markdowm 文件直接丢到 source/_posts 文件夹内，但是为了方便分类和管理自己的文章，在导出的 markdown 文件加入下面这些东西 1234567891011---#文章标题title: flex布局#文章发布时间date: 2018-08-26 21:37:55#文章的标签，可多写几个tags: 前端布局#文章分类categories: flex---#下面就是我们的文章正文啦 上面然后就可以在我们的站点中看到我们新增的博客啦。 6 后续讲到这里，我们的博客已经搭建起来的了，如果还有不明白的东西可以去翻翻 hexo 中文文档。最后咧，虽然博客搭起来了，也能写了，但是不自己配置一下的话，还是有点简陋的，所以下次就来讲讲如何去配置我们的 Hexo 博客吧。]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>搭建博客</tag>
      </tags>
  </entry>
</search>
